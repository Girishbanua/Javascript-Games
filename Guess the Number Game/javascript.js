let randomNumber = Math.floor(Math.random() * 100) + 1; //Generate random number between 1 and 100

    //the following three constants are each made to store a reference to the results paragraphs in our HTML,
    //and are used to insert values into the paragraphs later on in the code    
    const guesses = document.querySelector('.guesses'); // variable to store guesses made by the user
    const guessesLeft = document.querySelector('.guessesLeft'); // remaining attempts
    const lastResult = document.querySelector('.lastResult'); // varaible to store the last result
    const lowOrHigh = document.querySelector('.lowOrHigh'); // 
    const resultBox = document.querySelector('.resultParas');

    //the next two constants store reference to the form  text input and submit button,
    //and are used to control submitting the guess later on.
    const guessSubmit = document.querySelector('.guessSubmit');
    const guessField = document.querySelector('.guessField');
    
    //the last two variables store a guess count, and are used to keep track of how many guesses the player has had
    //and a reference to a reset button which will be visible only after the user's success or failure.
    let guessCount = 1;
    let attempts = 10;    
    let resetButton;

    function attemptsLeft(){
        guessesLeft.innerHTML = 'Attempts Left: ';
        guessesLeft.innerHTML += `${(attempts - 1) + " "}`;
    }

    function checkGuess(e){
        resultBox.style.display = 'block';
        const userGuess = Number(guessField.value); // this line declares a variable called userGuess and sets its value 
                                                    // to the current value entered inside the text field
                                                    // We also used built-in 'Number()' constructor, to make sure the entered value is a number.
        
        if(guessCount === 1) {                      // Here we are testing whether the guess count variable is equal to 1, whether its the player's first go or not
            guesses.textContent = 'Previous guesses: ';// if true the paragraph's text content equals to 'Previous Guesses:'
            guesses.style.backgroundColor = 'rgba(177, 93, 255, 0.7)';
            guessesLeft.innerHTML = 'Attempts Left: ';
        }
        guesses.textContent += `${userGuess + " "}`;
        guessesLeft.innerHTML += `${(attempts - 1) + " "}`;
 
        if(userGuess === randomNumber) {            // we now check, whether the user's  guess is equal to random number generated by the computer
            lastResult.textContent = 'Congratulations! You got it right!';// if true, this message is shown
            lastResult.style.backgroundColor = 'lightgreen';// the results background color changes to red
            lowOrHigh.textContent = '';               //  we clear the contents of lowOrHigh guess info box
            attemptsLeft();                          //   display the number of attempts left
            setGameOver();                          // we run a function called game over
        }else if(guessCount === 10){
            lastResult.textContent = '!!!GAME OVER!!!';
            guesses.style.display = 'none';
            lowOrHigh.textContent = '';
            attemptsLeft();
            setGameOver();
        }else{
            lastResult.textContent = 'Wrong!';
            lastResult.style.backgroundColor = 'rgba(255, 0, 0, 0.7)';
            attemptsLeft();

            if(userGuess < randomNumber){
                lowOrHigh.textContent = 'Last guess was too low!';
            }else if(userGuess > randomNumber){
                lowOrHigh.textContent = 'Last guess was too high!';
            }
        }
        // The following three lines get us ready for the next guess to be submitted.
        attempts--;                                 // attempts decreasing        
        guessCount++;                               // We add 1 to the guessCount variable
        guessField.value = '';                      // empty the value out of the form text field 
        guessField.focus();                         // focus it again, ready for the next guess to be entered
    }
    guessSubmit.addEventListener('click', checkGuess);

    function setGameOver(){
        guessField.disabled = true;
        guessSubmit.disabled = true;

        resetButton = document.createElement('button');
        resetButton.textContent = 'Start New Game';

        document.body.append(resetButton);
        
        resetButton.addEventListener('click', resetGame);        
    }

    function resetGame(){
        guessCount = 1;

        const resetParas = document.querySelectorAll('.resultParas p');
        for(const resetPara of resetParas) {
            resetPara.textContent = '';
        }

        resetButton.parentNode.removeChild(resetButton);
        
        resultBox.style.display = 'none';

        guessField.disabled = false;
        guessSubmit.disabled = false;
        guessField.value = '';
        guesses.style.display = 'block';
        attempts = 10;
        guessField.focus();        

        randomNumber = Math.floor(Math.random()*100) + 1;
    }